@page "/"
@page "/budget"

@using BlazorBudgetApp.Data
@using Blazored.Toast.Services;

@inject budgetBookService BudgetBookService
@inject NavigationManager navigationManager
@inject IToastService toastService

<PageTitle>Budget</PageTitle>

<form>
    <div class="row">
        <div class="col">
            <label class="control-label">Amount</label>
            <input class="form-control" @bind="@newEntry.Amount" />
        </div>
        <div class="col">
            <label class="control-label">Description</label>
            <input class="form-control" @bind="@newEntry.Description"/>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-primary" @onclick="() => CreateEntry()">Add</button>
        </div>
    </div>
</form>

<table class="table table-striped table-bordered mt-5">
    <thead class="table-dark">
        <tr>
            <th>Description</th>
            <th>Amount</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in allEntries)
        {
            <tr>
                <td>@entry.Description</td>
                <td>@entry.Amount</td>
                <td>
                    <button class="btn btn-outline-warning btn-sm" @onclick="() => ShareEntry(entry.Id)">Edit</button>
                    <button class="btn btn-outline-danger btn-sm" @onclick="() => DeleteEntry(entry.Id)">Delete</button>
                </td>
            </tr>
        }

        <tr>
            <td>Total</td>
            <td>@TotalAmount</td>
        </tr>
    </tbody>
</table>

@code {
    List<Entry> allEntries = new List<Entry>();

    Entry newEntry = new Entry();

    decimal TotalAmount = 0;
    dynamic successAdd = "Entry Added Successfully";
    dynamic successDelete = "Entry Deleted Successfully";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        allEntries = await BudgetBookService.GetAllEntries();
        TotalAmount = await BudgetBookService.GetTotal();
    }

    protected async void CreateEntry()
    {
        await BudgetBookService.AddEntry(newEntry);
        toastService.ShowSuccess(successAdd);

    }

    protected async void ShareEntry(int Id)
    {
        navigationManager.NavigateTo($"/editrecords/{Id}");
    }

    protected async void DeleteEntry(int Id)
    {
        await BudgetBookService.DeleteEntry(Id);
        TotalAmount = await BudgetBookService.GetTotal();
        toastService.ShowError(successDelete);
    }
}
